# PIPELINE DEFINITION
# Name: artifact-passing-pipeline
# Description: A pipeline that passes a file between components.
# Inputs:
#    message: str [Default: 'Hello from an artifact stored in MinIO!']
components:
  comp-create-file:
    executorLabel: exec-create-file
    inputDefinitions:
      parameters:
        text_to_write:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        output_artifact:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
  comp-read-file:
    executorLabel: exec-read-file
    inputDefinitions:
      artifacts:
        input_artifact:
          artifactType:
            schemaTitle: system.Dataset
            schemaVersion: 0.0.1
deploymentSpec:
  executors:
    exec-create-file:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - create_file
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.3'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef create_file(text_to_write: str, output_artifact: Output[Dataset]):\n\
          \    \"\"\"Creates a text file with some content.\"\"\"\n    # The .path\
          \ attribute gives us the actual file path to write to.\n    # KFP manages\
          \ creating this path for us.\n    with open(output_artifact.path, 'w') as\
          \ f:\n        f.write(text_to_write)\n    print(f\"Successfully created\
          \ file with content: '{text_to_write}'\")\n\n"
        image: python:3.9
    exec-read-file:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - read_file
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.3'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef read_file(input_artifact: Input[Dataset]):\n    \"\"\"Reads the\
          \ content of an input file and prints it.\"\"\"\n    # The .path attribute\
          \ gives us the actual file path to read from.\n    # KFP automatically downloads\
          \ the artifact and provides this path.\n    with open(input_artifact.path,\
          \ 'r') as f:\n        content = f.read()\n    print(f\"Read file and found\
          \ content: '{content}'\")\n\n"
        image: python:3.9
pipelineInfo:
  description: A pipeline that passes a file between components.
  name: artifact-passing-pipeline
root:
  dag:
    tasks:
      create-file:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-create-file
        inputs:
          parameters:
            text_to_write:
              componentInputParameter: message
        taskInfo:
          name: create-file
      read-file:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-read-file
        dependentTasks:
        - create-file
        inputs:
          artifacts:
            input_artifact:
              taskOutputArtifact:
                outputArtifactKey: output_artifact
                producerTask: create-file
        taskInfo:
          name: read-file
  inputDefinitions:
    parameters:
      message:
        defaultValue: Hello from an artifact stored in MinIO!
        isOptional: true
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.14.3
